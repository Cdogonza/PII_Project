<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:ClassLibrary.AreaOfWork">
            <summary>
            Representa una categoria de una empresa
            </summary>
        </member>
        <member name="P:ClassLibrary.AreaOfWork.Name">
            <summary>
            Propiedad nombre de la categoria de la empresa
            </summary>
        </member>
        <member name="M:ClassLibrary.AreaOfWork.#ctor(System.String)">
            <summary>
            Crea instancias de este tipo
            </summary>
        </member>
        <member name="T:ClassLibrary.Company">
            <summary>
            Clase que representa a un usuario del tipo compania dentro del programa
            </summary>
        </member>
        <member name="M:ClassLibrary.Company.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor de company
            </summary>
            <param name="name"></param>
            <param name="phone"></param>
            <param name="location"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.Company.DataCompany">
            <summary>
            Devuelve una lista con la informaci√≥n de una compania
            </summary>
        </member>
        <member name="T:ClassLibrary.ConsolePrinter">
            <summary>
            Esta clase tiene como responsabilidad impirmir por pantalla la informacion que recibe de las otras clases
            </summary>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersAvailability(ClassLibrary.OfferManager)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetOffertsAvailability de OfferManager
            </summary>
            <param name="offermanager"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintMyOffersAvailability(ClassLibrary.Search,ClassLibrary.Company)">
            <summary>
             Este metodo se encarga de imprimir en pantalla lo que devuelve GetMyOffertsAvailability de OfferManager
            </summary>
            <param name="search"></param>
            <param name="company"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersByLocation(ClassLibrary.Search,System.String)">
            <summary>
             Este metodo se encarga de imprimir en pantalla lo que devuelve GetOfferByLocation de Search
            </summary>
            <param name="search"></param>
            <param name="location"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersByWord(ClassLibrary.Search,System.String)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetOfferByWord de Search
            </summary>
            <param name="search"></param>
            <param name="word"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersByCategory(ClassLibrary.Search,System.String)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetOfferByCategory de Search
            </summary>
            <param name="search"></param>
            <param name="category"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersByEntrepreneur(ClassLibrary.Search,ClassLibrary.Entrepreneur)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetOfferByEntrepreneur de Search
            </summary>
            <param name="search"></param>
            <param name="entrepreneur"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintOffersByCompany(ClassLibrary.Search,ClassLibrary.Company)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetOfferByCompany de Search
            </summary>
            <param name="search"></param>
            <param name="company"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintPermissions(ClassLibrary.DataManager)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetTextToPrintPermission de Datamanager
            </summary>
            <param name="datamanager"></param>    
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintAreaOfWork(ClassLibrary.DataManager)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetTextToPrintPermission de Datamanager
            </summary>
            <param name="datamanager"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintMaterialType(ClassLibrary.DataManager)">
            <summary>
            Este metodo se encarga de imprimir en pantalla lo que devuelve GetTextToPrintMaterialType de Datamanager
            </summary>
            <param name="datamanager"></param>
        </member>
        <member name="M:ClassLibrary.ConsolePrinter.PrintUserPermissions(ClassLibrary.UserBase)">
            <summary>
            Metodo para imprimir por pantalla los permisos que posee el usuario
            </summary>
            <param name="userbase"></param>
        </member>
        <member name="T:ClassLibrary.DataManager">
            <summary>
            Esta clase es la encargada de manejar los datos de AreaOfWork(Rubros) MaterialsTypes y Permissions(Habilitaciones)
            </summary>
        </member>
        <member name="F:ClassLibrary.DataManager.areaofwork">
            <summary>
            Lista de String donde se almacenan los rubros
            </summary>
            <typeparam List="string"></typeparam>
            <returns></returns>        
        </member>
        <member name="F:ClassLibrary.DataManager.materialsType">
            <summary>
            Lista de MaterialType donde se almacenan los tipos de materiales 
            </summary>
            <typeparam List="MaterialType"></typeparam>
            <returns></returns>
        </member>
        <member name="F:ClassLibrary.DataManager.permissions">
            <summary>
            Lista de Permisos donde se almacenan los permisos a ser usados por las empresas y las ofertas
            </summary>
            <typeparam List="Permission"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.AddPermission(ClassLibrary.Permission)">
            <summary>
            Metodo para agregar permisos al listado de permisos
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ClassLibrary.DataManager.CheckPermission(System.Int32)">
            <summary>
            Metodo que chequea si el permiso ingresado por el usuario existe en la lista de Permisos del sistema. 
            </summary>
            <param name="indice"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.GetPermissionByIndex(System.Int32)">
            <summary>
             Metodo que retorna el permiso segun el lugar de la lista ingresado
            </summary>
            <param name="indice"></param>
            <returns></returns> 
        </member>
        <member name="M:ClassLibrary.DataManager.GetTextToPrintPermission">
            <summary>
             Metodo utilizado para obtener todos los permisos de la lista y restornarlos como texto,
             Para que ConsolePrinter pueda obtener ese texto e imprimirlo en pantalla.
            </summary>
            <returns>data</returns> Texto que obtiene ConsolePrinter para imprimir
        </member>
        <member name="M:ClassLibrary.DataManager.GetPermissions">
            <summary>
             Retorna la lista de Permisos almacenados en el sistema
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.AddAreaOfWork(System.String)">
            <summary>
            Metodo para agregar Rubros a la lista de Rubros
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ClassLibrary.DataManager.CheckAreaOfWork(System.Int32)">
            <summary>
            Metodo que corrobora si el numero ingresado por el usuario para agregar el rubro en su listado, existe en el listado de rubros.
            </summary>
            <param name="indice"></param>
            <returns>Retorna True si existe, sino retorna False</returns>        
        </member>
        <member name="M:ClassLibrary.DataManager.GetAreaOfWorkByIndex(System.Int32)">
            <summary>
            Metodo que retorna el Rubro segun el lugar ingresado de la lista
            </summary>
            <param name="indice"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.GetTextToPrintAreaOfWork">
            <summary>
             Metodo utilizado para obtener todos los rubros de la lista y retornarlos como texto,
             Para que ConsolePrinter pueda obtener ese texto e imprimirlo en pantalla. 
            </summary>
            <returns>data</returns> Texto que obtiene ConsolePrinter para imprimir
        </member>
        <member name="M:ClassLibrary.DataManager.GetAreasOfWork">
            <summary>
            Retorna la lista de Rubros almacenados en el sistema
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.AddMaterialType(ClassLibrary.MaterialType)">
            <summary>
            Agrega un tipo de Material a la lista de MaterialTypes
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ClassLibrary.DataManager.CheckMaterialType(System.Int32)">
            <summary>
            Verifica si el material ingresado por el usuario existe en la lista de Materiales.
            </summary>
            <param name="indice"></param>
            <returns>Retorna True si el Tipo de Material existe en la lista, sino existe devuelve False</returns>
        </member>
        <member name="M:ClassLibrary.DataManager.GetMaterialTypeByIndex(System.Int32)">
            <summary>
            Metodo que retorna el Tipo de Material segun el lugar ingresado de la lista
            </summary>
            <param name="indice"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.DataManager.GetTextToPrintMaterialType">
            <summary>
            Metodo utilizado para obtener todos los rubros de la lista y retornarlos como texto,
            Para que ConsolePrinter pueda obtener ese texto e 
            </summary>
        </member>
        <member name="M:ClassLibrary.DataManager.GetMaterialsType">
            <summary>
            Retorna la lista de Materiales almacenados en el sistema
            </summary>
            <returns></returns>
        </member>
        <member name="T:ClassLibrary.Entrepreneur">
            <summary>
             Esta clase representa al emprendedor el cual hereda metodos y atributos de la clase UserBase
            </summary>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.Specialization">
            <summary>
            String de la especializacion
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor de la clase Entrepreneur
            </summary>
            <param name="name"></param>
            <param name="phone"></param>
            <param name="location"></param>
            <param name="area"></param>
            <param name="specialization"></param>
            <returns></returns>
        </member>
        <member name="T:ClassLibrary.IPrinter">
            <summary>
            Esta interfaz define las operaciones necesarias para imprimir los diferentes textos del programa
            </summary>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersAvailability(ClassLibrary.OfferManager)">
            <summary>
            Este metodo imprime las ofertas en estado disponible 
            </summary>
            <param name="offermanager"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintMyOffersAvailability(ClassLibrary.Search,ClassLibrary.Company)">
            <summary>
            Este metodo imprime las ofertas disponibles de la compania
            </summary>
            <param name="search"></param>
            <param name="company"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersByLocation(ClassLibrary.Search,System.String)">
            <summary>
            Este metodo imprime las ofertas filtradas por Ubicacion
            </summary>
            <param name="search"></param>
            <param name="location"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersByWord(ClassLibrary.Search,System.String)">
            <summary>
            Este metodo imprime las ofertas filtradas por Palabra
            </summary>
            <param name="search"></param>
            <param name="word"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersByCategory(ClassLibrary.Search,System.String)">
            <summary>
            Este metodo imprime las ofertas de una Catergoria
            </summary>
            <param name="search"></param>
            <param name="category"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersByEntrepreneur(ClassLibrary.Search,ClassLibrary.Entrepreneur)">
            <summary>
            Este metodo imprime las ofertas de un emprendedor
            </summary>
            <param name="search"></param>
            <param name="entrepreneur"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintOffersByCompany(ClassLibrary.Search,ClassLibrary.Company)">
            <summary>
            Este metodo imprime todas las ofertas de una compan√≠a
            </summary>
            <param name="search"></param>
            <param name="company"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintPermissions(ClassLibrary.DataManager)">
            <summary>
            Metodo que imprime todos los permisos cargados en el sistema
            </summary>
            <param name="datamanager"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintAreaOfWork(ClassLibrary.DataManager)">
            <summary>
            Metodo que imprime todos los Rubros cargados en el sistema
            </summary>
            <param name="datamanager"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintMaterialType(ClassLibrary.DataManager)">
            <summary>
            Metodo que Imprime todos los materiales existentes en el sistema
            </summary>
            <param name="datamanager"></param>
        </member>
        <member name="M:ClassLibrary.IPrinter.PrintUserPermissions(ClassLibrary.UserBase)">
            <summary>
            Metodo que imprime todos los permisos del usuario
            </summary>
            <param name="userbase"></param>    
        </member>
        <member name="T:ClassLibrary.Material">
            <summary>
            Esta clase es la encargada de crear instancias de materiales
            </summary>
        </member>
        <member name="P:ClassLibrary.Material.Name">
            <summary>
            String del nombre del material
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Material.Type">
            <summary>
            Instancia de MaterialType que representa el tipo del material
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Material.Quantity">
            <summary>
            String de la cantidad del material 
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Material.Cost">
            <summary>
            El costo del material
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Material.Location">
            <summary>
            String de la ubicaci√≥n del material
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.Material.#ctor(System.String,ClassLibrary.MaterialType,System.String,System.Double,System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="quantity"></param>
            <param name="cost"></param>
            <param name="location"></param>
        </member>
        <member name="T:ClassLibrary.MaterialType">
            <summary>
            Esta clase representa los tipos de materiales.
            </summary>
        </member>
        <member name="P:ClassLibrary.MaterialType.Name">
            <summary>
            String del nombre del tipo de material
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.MaterialType.Description">
            <summary>
            String de la descripcion sobre el tipo de material
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.MaterialType.#ctor(System.String,System.String)">
            <summary>
            Constructor de la clase MaterialType
            </summary>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="T:ClassLibrary.Offer">
            <summary>
            Esta clase esteblece los parametros necesarios para la creacion de la oferta
            </summary>
        </member>
        <member name="P:ClassLibrary.Offer.Name">
            <summary>
            Nombre de la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Cost">
            <summary>
            Costo en caso de que tenga
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Location">
            <summary>
            Ubicacion donde la company tiene el material de la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Availability">
            <summary>
            Establece si la oferta esta disponible para algun emprendedor o simplemente esta creada pero no disponible
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.RegularOffers">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Tags">
            <summary>
            Palabras claves para darle la facilidad al emprendedor de encontrar la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.DeliveryDate">
            <summary>
            Fecha de compra de la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.PublicationDate">
            <summary>
            Fecha de la publicacion de la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Company">
            <summary>
            Company que creo la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Entrepreneur">
            <summary>
            Este parametro esta vacio hasta un emprendedor adquiere la oferta
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Offer.Material">
            <summary>
            Establece el material de la oferta
            </summary>
            <value></value>
        </member>
        <member name="F:ClassLibrary.Offer.permissions">
            <summary>
            La lista de permisos que tiene que tener el emprendedor para adquirir la la oferta
            </summary>
            <typeparam List="Permission"></typeparam>
            <returns></returns>
        </member>
        <member name="P:ClassLibrary.Offer.id">
            <summary>
            El id lo utilizamos para identificar cada oferta en el catalogo
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.Offer.#ctor(System.String,ClassLibrary.Material,System.String,System.Double,System.Boolean,System.Collections.ArrayList,System.DateTime,System.DateTime,ClassLibrary.Company)">
            <summary>
            Este es el constructor de la oferta que recibe los parametros para crear la misma
            </summary>
            <param name="name"></param>
            <param name="material"></param>
            <param name="location"></param>
            <param name="cost"></param>
            <param name="regularoffers"></param>
            <param name="tags"></param>
            <param name="deliverydate"></param>
            <param name="publicationdate"></param>
            <param name="offer"></param>
        </member>
        <member name="M:ClassLibrary.Offer.AddPermission(System.String)">
            <summary>
            Permite agregar permisos a la oferta
            </summary>
            <param name="permission"></param>
        </member>
        <member name="M:ClassLibrary.Offer.getOffer(ClassLibrary.Entrepreneur)">
            <summary>
            Metodo que retorna los datos de la empresa para ser enviados al emprendedor que compro la oferta
            A su vez deja como no disponible la oferta en el catalogo
            y coloca el nombre del emprendedor a la oferta
            </summary>
            <param name="entrepreneur"></param>
            <returns></returns>
        </member>
        <member name="T:ClassLibrary.OfferManager">
            <summary>
            Clase experta en el manejo de las ofertas
            </summary>
        </member>
        <member name="F:ClassLibrary.OfferManager.catalog">
            <summary>
            Catalogo de ofertas de nuestra aplicacion
            </summary>
            <typeparam List="Offer"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.OfferManager.#ctor">
            <summary>
            Este es el constructor de la clase
            </summary>
        </member>
        <member name="M:ClassLibrary.OfferManager.SaveOffer(ClassLibrary.Offer)">
            <summary>
            Este metodo lo que hace es, una vez creada la oferta se guarda en el catalogo de la aplicacion
            </summary>
            <param name="offer"></param>
        </member>
        <member name="M:ClassLibrary.OfferManager.PublishOffer(System.Int32)">
            <summary>
            Este metodo se utiliza para re publicar ofertas que son priodicas 
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ClassLibrary.OfferManager.DiseableOffer(System.Int32)">
            <summary>
            Este metodo desabilita una oferta del catalogo
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ClassLibrary.OfferManager.GetOffersAvailability">
            <summary>
            Este metodo retorna las ofertas del catalogo que estan habilitadas
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.OfferManager.BuyOffer(ClassLibrary.Entrepreneur,System.Int32)">
            <summary>
            El metodo siguiente permite comprar la oferta al emprendedor
            </summary>
            <param name="buyer"></param>
            <param name="index"></param>
        </member>
        <member name="T:ClassLibrary.Permission">
            <summary>
            Esta clase representa los permisos de las empresas y emprendedores
            </summary>
        </member>
        <member name="M:ClassLibrary.Permission.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ClassLibrary.Permission.Name">
            <summary>
            String con el nombre del permiso
            </summary>
            <value></value>
        </member>
        <member name="T:ClassLibrary.Search">
            <summary>
            Filtra el cat√°logo seg√∫n diferentes t√©rminos
            </summary>
        </member>
        <member name="F:ClassLibrary.Search.catalog">
            <summary>
            Crea una lista de ofertas vac√≠a
            </summary>
        </member>
        <member name="M:ClassLibrary.Search.#ctor">
            <summary>
            Carga una copia del catalogo de ofertas a la lista
            </summary>
        </member>
        <member name="M:ClassLibrary.Search.GetOfferByLocation(System.String)">
            <summary>
            Filtra el cat√°logo de b√∫squedas seg√∫n su ubicaci√≥n
            </summary>
            <param name="location"></param>
            <returns>Retorna un string con una lista de ofertas</returns>
        </member>
        <member name="M:ClassLibrary.Search.GetOfferByWord(System.String)">
            <summary>
            Filtra el cat√°logo de b√∫squedas seg√∫n palabras clave
            </summary>
            <param name="word"></param>
            <returns>Retorna un string con una lista de ofertas</returns>
        </member>
        <member name="M:ClassLibrary.Search.GetOfferByCategory(System.String)">
            <summary>
            Filtra el cat√°logo de ofertas seg√∫n su categoria (tipo de material)
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.Search.GetOfferByEntrepreneur(ClassLibrary.Entrepreneur)">
            <summary>
            Filtra el cat√°logo de b√∫squedas que compr√≥ un emprendedor
            </summary>
            <param name="entrepreneur"></param>
            <returns>Retorna un string con una lista de ofertas</returns>
        </member>
        <member name="M:ClassLibrary.Search.GetOfferByCompany(ClassLibrary.Company)">
            <summary>
            Filtra el cat√°logo de b√∫squedas que public√≥ una empresa
            </summary>
            <param name="company"></param>
            <returns>Retorna un string con una lista de ofertas</returns>
        </member>
        <member name="M:ClassLibrary.Search.GetAvailableOffersByCompany(ClassLibrary.Company)">
            <summary>
            Filtra el cat√°logo de ofertas y agrupa las que est√°n disponibles 
            y fueron publicadas por determinada compa√±ia
            </summary>
            <param name="company"></param>
            <returns>Retorna un string con una lista de ofertas</returns>
        </member>
        <member name="T:ClassLibrary.Singleton`1">
            <summary>
            Esta clase tiene como responsabilidad crear una sola instancia de las clases que la implementan (Datamanager y OfferManager) 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ClassLibrary.Singleton`1.Instance">
            <summary>
            Crea una instancia Singleton en caso de que no exista, en caso de que exista devuelve la clase existente.
            </summary>
            <value></value>
        </member>
        <member name="T:ClassLibrary.UserBase">
            <summary>
            Esta clase define las propiedas y comportamiento que comparten los diferentes usuarios de la empresa
            </summary>
        </member>
        <member name="P:ClassLibrary.UserBase.Name">
            <summary>
            Propiedad Nombre del usuario
            </summary>
        </member>
        <member name="P:ClassLibrary.UserBase.Location">
            <summary>
            Propiedad ubicaci√≥n de la empresa
            </summary>
        </member>
        <member name="P:ClassLibrary.UserBase.Phone">
            <summary>
            Propiedad telefono del usuario
            </summary>
        </member>
        <member name="P:ClassLibrary.UserBase.AreaOfWork">
            <summary>
            Instancia de clase AreaOfWork que representa una categoria de la empresa
            </summary>
        </member>
        <member name="F:ClassLibrary.UserBase.permissions">
            <summary>
            Lista de habilitaciones que posee un usario
            </summary>
            <typeparam list="Permission"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.UserBase.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Permite crear instancias de los usuarios del programa
            </summary>
            <param name="name"></param>
            <param name="phone"></param>
            <param name="location"></param>
            <param name="area"></param>
        </member>
        <member name="M:ClassLibrary.UserBase.AddPermission(ClassLibrary.Permission)">
             <summary>
            Permite agregar permisios a un usuario
             </summary>
        </member>
        <member name="M:ClassLibrary.UserBase.RemovePermission(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <summary>
            Permite eliminar un permiso de un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.UserBase.GetPermissions">
            <summary>
            permite obtener la lista de permisos de un usuario
            </summary>
        </member>
    </members>
</doc>
